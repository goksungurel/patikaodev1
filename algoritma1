Insertion Sort
Verilen Dizi: [22, 27, 16, 2, 18, 6]

Insertion Sort Aşamaları:

Insertion Sort, diziyi baştan sona sıralarken her elemanı uygun yerine yerleştirir. Aşamalar şu şekildedir:

İlk eleman olan 22 zaten sıralı kabul edilir:
[22, 27, 16, 2, 18, 6]
İkinci eleman 27, 22’den büyük olduğu için yerinde kalır:
[22, 27, 16, 2, 18, 6]
Üçüncü eleman 16, önce 27 ile karşılaştırılır ve daha küçük olduğu için 27’nin önüne yerleştirilir. Ardından 22 ile karşılaştırılır ve onun da önüne yerleştirilir:
[16, 22, 27, 2, 18, 6]
Dördüncü eleman 2, sırasıyla 27, 22 ve 16 ile karşılaştırılır ve hepsinin önüne yerleştirilir:
[2, 16, 22, 27, 18, 6]
Beşinci eleman 18, 27 ile karşılaştırılır ve onun önüne, ardından 22 ile karşılaştırılır ve onun da önüne yerleştirilir:
[2, 16, 18, 22, 27, 6]
Altıncı eleman 6, sırasıyla 27, 22, 18 ve 16 ile karşılaştırılır ve hepsinin önüne yerleştirilir:
[2, 6, 16, 18, 22, 27]
Sonuçta, dizi sıralandıktan sonra:
[2, 6, 16, 18, 22, 27]
Big-O Gösterimi:

Insertion Sort'un en kötü durum zaman karmaşıklığı O(n²)'dir. Bu, her elemanın tüm önceki elemanlarla karşılaştırılması gerektiğinde gerçekleşir.

Best Case (En iyi durum): O(n) → Dizi zaten sıralıysa.
Average Case (Ortalama durum): O(n²)
Worst Case (En kötü durum): O(n²) → Dizi tam tersine sıralanmışsa.
Time Complexity: 18 sayısının kapsamı

Dizi sıralandıktan sonra 18, ortalarda bir yerdedir. Bu durumda:

18 sayısı Average Case kapsamına girer çünkü ortada bir değerdir.
Proje 2 - Selection Sort
Verilen Dizi: [7, 3, 5, 8, 2, 9, 4, 15, 6]

Selection Sort her adımda en küçük elemanı bulur ve dizinin başına yerleştirir.

İlk 4 adım:

1. Adım: En küçük eleman 2, dizinin başındaki 7 ile yer değiştirir:
[2, 3, 5, 8, 7, 9, 4, 15, 6]
2. Adım: Kalan diziden en küçük eleman 3 zaten yerinde:
[2, 3, 5, 8, 7, 9, 4, 15, 6]
3. Adım: Kalan diziden en küçük eleman 4, 5 ile yer değiştirir:
[2, 3, 4, 8, 7, 9, 5, 15, 6]
4. Adım: Kalan diziden en küçük eleman 5, 8 ile yer değiştirir:
[2, 3, 4, 5, 7, 9, 8, 15, 6]
Bu adımlarla dizi sıralanmaya başlamıştır.
